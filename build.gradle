plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	if (project.accesswidener == "true") accessWidenerPath = file(project.accesswidener_path)
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
}

runClient.doFirst {
	args = ['--username', "MCLegoMan${new Random().nextInt(1000)}"]
}


dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft}"
	mappings "net.fabricmc:yarn:${project.mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api}"

	modImplementation "com.github.mclegoman:simplefabric:${project.simplefabric}"
	modImplementation "com.github.mclegoman:releasetypeutils:${project.releasetypeutils}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}